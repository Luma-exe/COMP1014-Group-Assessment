b = rbinom(1000, size = 3, prob = 0.5)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b)
var(b)
b = rbinom(1000, size = 3, prob = 0.5)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b)
b = rbinom(100, size = 3, prob = 0.1)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
b = rbinom(100, size = 3, prob = 0.1)
b = rbinom(100, size = 3, prob = 0.1)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
b = rbinom(100, size = 3, prob = 0.1)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
b = rbinom(100, size = 3, prob = 0.1)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
b = rbinom(100, size = 3, prob = 0.1)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
b = rbinom(100, size = 3, prob = 0.1)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
b = rbinom(100, size = 3, prob = 0.1)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
b = rbinom(100, size = 3, prob = 0.1)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
b = rbinom(1000, size = 3, prob = 0.5)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
b = rbinom(1000, size = 3, prob = 0.5)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
### Direct count randomisation
```{r}
### Hypothesis Test for a Difference in Proportions
#### Chi-Square Test to compare proportions
```{r}
### Hypothesis Test for a Difference in Proportions
#### Chi-Square Test to compare proportions
```{r}
### Hypothesis Test for a Difference in Proportions
#### Chi-Square Test to compare proportions
```{r }
print(tab)
tab = matrix(c(12,100-12,188,1000-188), ncol=2)
dimnames(tab) = list(c("disease", "no disease"), c("Trump","Clinton"))
print(tab)
knitr::opts_chunk$set(echo = TRUE)
x = sample(c("T","H"), replace=TRUE, size=3) #Create a vector containing 3 instances of "T" and "H"
sum(x=="H") #print sum of "H" instances
rbinom(1, size=3, prob=0.5) #Directly generates a random count
rbinom(10, 3, 0.5)
# number of trials = 10, flips per trial = 3, probability of success = 0.5
choose(4,2) # how many ways to get 2 heads from 4 coin tosses
dbinom(0:3, size = 3, prob = 0.5) # Probability of 0 through 3 heads from 3 coin tosses
b = rbinom(1000, size = 3, prob = 0.5)
mean(b) # Approx 1.5 (n*p = 3 * 0.5)
var(b) # approx 0.75 (n*p*(1-p) = 3 * 0.5 * 0.5)
tab = matrix(c(12,100-12,188,1000-188), ncol=2)
dimnames(tab) = list(c("disease", "no disease"), c("Trump","Clinton"))
print(tab)
test=chisq.test(tab,correct=FALSE)
test$expected
test
test=chisq.test(tab,correct=FALSE)
test$expected
test
barplot(horsekick, col="lightblue")
horsekick = c(109,65,22,3,1)
names(horsekick) = 0:4
print(horsekick)
barplot(horsekick, col="lightblue")
#### Question 1
knitr::opts_chunk$set(echo = TRUE)
diet <- read.csv("Diet.csv")
diet
cor(diet$before, diet$after)
```{r}
cor(diet$before, diet$After)
cor(diet$Before, diet$After)
cor(diet$Before, diet$After, method="Pearson")
cor(diet$Before, diet$After, method="pearson")
cor(diet$Before, diet$After, method="pearson")
knitr::opts_chunk$set(echo = TRUE)
#Load csv
diet <- read.csv("Diet.csv")
cor(diet$Before, diet$After, method="pearson")
```{r setup, include=FALSE}
### Question 1:
#### A) Compute the Pearson correlation coefficient between the weight before the diet and after the diet.
```{r}
cor(diet$Before, diet$After, method="pearson")
cor(diet$Before, diet$After, method="pearson")
```{r}
```{r}
cor(diet$Before, diet$After, method="pearson")
cor(diet$Before, diet$After, method="pearson")
```{r}
```{R}
cor.test(diet$Before, diet$After, method="pearson")
cor.test(diet$Before, diet$After, alternative="greater", method="pearson")
plot(postsz ~ presz, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
plot(before ~ after, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
plot(diet$Before ~ diet$after, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
plot(diet$Before ~ diet$After, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
abline(0,1, lwd=2)
plot(diet$Before ~ diet$After, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
abline(0,1, lwd=2)
fit = lm(diet$Before ~ diet$After, data=diet)
predict(fit, newdata=data.frame(Before=c(60, 70, 90)), interval="conf")
summary(fit)
fit = lm(diet$After ~ diet$Before, data=diet) # Linear regression model
summary(fit)
PredictWeight <- 13.06 + 0.85 *76
PredictWeight <- 13.06 + 0.85 *76
PredictWeight
summary(fit)
fit = lm(diet$After ~ diet$Before, data=diet) # Linear regression model
summary(fit)
PredictWeight <- 22.21 + 0.57 *76
PredictWeight
PredictWeight <- 22.21 + 0.57 *77
PredictWeight
PredictWeight <- 13.06 + 0.85 *76
PredictWeight
fit = lm(diet$After ~ diet$Before, data=diet) # Linear regression model
summary(fit)
#### C)
```{r}
PredictWeight <- 13.06 + 0.85 *76
PredictWeight
PredictWeight <- 22.21 + 0.57 *76
PredictWeight
plot(diet$After ~ diet$Before, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
abline(0,1, lwd=2)
plot(diet$After ~ diet$Before, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
abline(0,1, lwd=2)
fit = lm(diet$After ~ diet$Before, data=diet) # Linear regression model
summary(fit)
plot(diet$After ~ diet$Before, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
abline(0,1, lwd=2)
plot(diet$After ~ diet$Before, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
plot(diet$After ~ diet$Before, data=diet, pch=16)
abline(0,1, lwd=2)
plot(diet$After ~ diet$Before, data=diet, pch=16, xlim=c(0,80), ylim=c(0,90))
plot(diet$After ~ diet$Before, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
plot(diet$After ~ diet$Before, data=diet, pch=16)
, xlim=c(0,160), ylim=c(0,180)
plot(diet$After ~ diet$Before, data=diet, pch=16, xlim=c(0,160), ylim=c(0,180))
plot(diet$After ~ diet$Before, data=diet, pch=16)
plot(diet$After ~ diet$Before, data=diet, pch=16)
abline(22.21,0.57, lwd=2)
plot(diet$After ~ diet$Before, data=diet, pch=16)
abline(22.21, 0.57, lwd=2)
fit = lm(diet$After ~ diet$Before, data=diet) # Linear regression model
summary(fit)
# Intercept= 22.21
# weight$After = 0.57
# Slope: Weight After = 22.21 + 0.57 * Weight before
plot(diet$After ~ diet$Before, data=diet, pch=16)
abline(22.21, 0.57, lwd=2)
knitr::opts_chunk$set(echo = TRUE)
#Load csv
diet <- read.csv("Diet.csv")
cor.test(diet$Before, diet$After, alternative="greater", method="pearson")
fit = lm(diet$After ~ diet$Before, data=diet) # Linear regression model
summary(fit)
# Intercept= 22.21
# weight$After = 0.57
# Slope: Weight After = 22.21 + 0.57 * Weight before
plot(diet$After ~ diet$Before, data=diet, pch=16)
abline(22.21, 0.57, lwd=2)
PredictWeight <- 22.21 + 0.57 *76
PredictWeight
setwd("~/Github/University/Autumn2025/Comp1014/Assignment")
knitr::opts_chunk$set(echo = TRUE)
SleepCogStudy <- read.csv("Resources/Sleep_Cognition_Study_f1PhaXA.csv")
SleepCogStudy
SleepCogStudy[1]
SleepCogStudy
SleepCogStudy[,1]
SleepCogStudy[1,1]
SleepCogStudy[1,1,1]
SleepCogStudy[1:10]
SleepCogStudy
male <- c(SleepCogStudy$Gender == "Male")
male <- c(SleepCogStudy, SleepCogStudy$Gender == "Male")
male
SleepCogStudy <- read.csv("Resources/Sleep_Cognition_Study_f1PhaXA.csv")
#SleepCogStudy
```
male <- c(SleepCogStudy, SleepCogStudy$Gender == "Male")
male
SleepCogStudy
male <- c(SleepCogStudy$Gender == "Male")
male <- c(SleepCogStudy$Gender == "Male")
male
maleFx <- c(SleepCogStudy$NapFrequency, SleepCogStudy$Gender == "Male")
male
maleFx
maleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])
maleFx
SleepCogStudy
femaleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Female"])
femaleFx
barplot(maleFx, femaleFx)
plot(maleFx, femaleFx)
scatterplot(maleFx, femaleFx)
bar
plot(maleFx, femaleFx)
plot(maleFx)
plot(maleFx,)
plot(,maleFx)
plot(maleFx, MaleFx)
plot(maleFx, maleFx)
maleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])
plot(maleFx, MaleFx)
plot(maleFx, 10)
maleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])
names(maleFx) <- c(1, 2, 3, 4, 5)
plot(maleFx, 10)
plot(maleFx, femaleFx, main = "SleepCogStudy")
plot(maleFx, femaleFx, main = "SleepCogStudy", pch = 20)
maleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])
femaleFx <- cfemaleFx <- cfemaleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Female"])
plot(maleFx, femaleFx, main = "SleepCogStudy", pch = 20)
table(maleFx)
barplot(maleFx, femaleFx, main = "SleepCogStudy", pch = 20)
barplot(maleFx, femaleFx, pch = 20)
barplot(maleFx, femaleFx)
barplot(maleFx, NapFrequency)
barplot(maleFx, SleepCogStudy$NapFrequency)
barplot(SleepCogStudy$NapFrequency, maleFx)
barplot(SleepCogStudy$NapFrequency)
table(maleFx)
sum(maleFx)
sum(maleFx(,2))
sum(maleFx[,2]
sum(maleFx[,2])
sum(maleFx[2])
sum(maleFx[1])
sum(maleFx[0])
sum(maleFx(2))
sum(maleFx$[2])
sum(maleFx$2])
sum(maleFx$2)
table(maleFx)
names(maleFX) <- c("Never", "Often", "Rarely Sometimes")
maleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])
names(maleFX) <- c("Never", "Often", "Rarely", "Sometimes")
names(maleFx) <- c("Never", "Often", "Rarely", "Sometimes")
table(maleFx)
plot(maleFx)
barplot(maleFx)
barplot(maleFx, horiz=TRUE)
# Create a matric of maleFx and femaleFx
maleFx <-matrix( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"]))
# Create a matric of maleFx and femaleFx
maleFx <-matrix( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"]))
barplot(maleFx, horiz=TRUE)
maleFx <-matrix( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrive Nap Frequency of males
names(maleFx) <- c("Never", "Often", "Rarely", "Sometimes")
barplot(maleFx, horiz=TRUE)
femaleFx <- cfemaleFx <- cfemaleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Female"])
barplot(maleFx, horiz=TRUE)
male(Fx)
maleFx <-matrix( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrive Nap Frequency of males
male(Fx)
table(male(Fx))
table(maleFx)
maleFx <- table(factor(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"],
levels = c("Never", "Rarely", "Sometimes", "Often")))
table(maleFx)
maleFx <- table(factor(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"],
levels = c("Never", "Rarely", "Sometimes", "Often")))
table(maleFx)
names(maleFx) <- c("Never", "Often", "Rarely", "Sometimes")
table(maleFx)
# Create a matric of maleFx and femaleFx
levels(SleepCogStudy$NapFrequency)
maleFx <-matrix( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrive Nap Frequency of males
table(maleFx)
barplot(maleFx,
horiz = TRUE,
col = "skyblue",
main = "Nap Frequency for Males",
xlab = "Number of Males")
barplot(SleepCogStudy$NapFrequency)
table(maleFx)
sum(maleFx)
barplot((SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])))
barplot((SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"]))
femaleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Female"])
barplot((SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"].asNumeric))
maleFx <- subset( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
maleFx <- data.frame( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
maleFx
maleFx <- data.frame( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
maleFx
maleFx <-matrix( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
maleFx
maleFx <-matrix( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
#maleFx <- data.frame( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
maleFx
maleFx <-table( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
#maleFx <- data.frame( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
maleFx
genderTable <- table((SleepCogStudy$Gender, (SleepCogStudy$NapFrequency)
genderTable <- table((SleepCogStudy$Gender, (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency))
genderTable
genderTable <- table((SleepCogStudy$Gender["Male", "Female"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == ("Male" & "Female"), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender[Gender == ("Male" && "Female")]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$[Gender == ("Male" && "Female")]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy[Gender == ("Male" && "Female")]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male", "Female"]), (SleepCogStudy$NapFrequency))
genderTable
genderTable <- table((SleepCogStudy$Gender["Male"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency))
genderTable
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency), nrow = 2)
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency), nrow(2))
genderTable
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency), nrow(2))
genderTable(nrow(2))
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency))
genderTable(nrow(2))
genderTable()
genderTable
maleFx <-table( c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"])) # Retrieve Nap Frequency of males
maleFx
table(maleFx)
maleFx
maleFx <-c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"]) # Retrieve Nap Frequency of males
maleFx
table(maleFx)
table(maleFx, femaleFx )
femaleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Female"])
femaleFx
maleFx <-c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Male"]) # Retrieve Nap Frequency of males
femaleFx <- c(SleepCogStudy$NapFrequency[SleepCogStudy$Gender == "Female"]) # Retrieve Nap Frequency of females
femaleFx
table(femaleFx)
table(maleFx)
barplot(maleFx, femaleFx)
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency))
barplot(genderTable)
barplot(genderTable, ncol(2))
barplot(genderTable, nrow(2))
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency),  n(2))
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency),  nrow(2))
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency),  ncol(2))
genderTable <- table((SleepCogStudy$Gender[nrow(2)]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender[ncol(2)]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender).nrow(2), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender.nrow(2)), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender.ncol(2)), (SleepCogStudy$NapFrequency))
genderTable <- table(((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency)), ncol(2))
genderTable <- table(((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency)), nrow(2))
genderTable <- table((SleepCogStudy$Gender).ncol(2), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency))
barplot(genderTable.nrow(2))
genderTable <- table((SleepCogStudy$Gender == (("Male") || ("Female")), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == (("Male") || ("Female"))), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == (("Male") || ("Female"))), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == ("Male" || "Female") ), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == (SleepCogStudy$Gender = "Male" || SleepCogStudy$Gender ="Female") ), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == ("Male" && "Female") ), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male" && "Female"] ), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male" && "Female"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male" || "Female"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male" | "Female"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == ["Male" || "Female"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == ("Male" || "Female"), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender == ("Male" || "Female")), (SleepCogStudy$NapFrequency))
# Tabulate maleFx and femaleFx
bigTable <- table(maleFx, SleepCogStudy$NapFrequency )
# Tabulate maleFx and femaleFx
bigTable <- table(maleFx, femaleFx )
genderTable <- table(((SleepCogStudy$Gender == ("Male" || "Female"))), (SleepCogStudy$NapFrequency))
genderTable <- table(((SleepCogStudy$Gender$("Male" || "Female"))), (SleepCogStudy$NapFrequency))
genderTable <- table(((SleepCogStudy$Gender$"Male" || "Female")), (SleepCogStudy$NapFrequency))
genderTable <- table(((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency))
genderTable <- table(((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency))
genderTable <- table(((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency)))
genderTable <- table((SleepCogStudy$Gender), (SleepCogStudy$NapFrequency))
barplot(genderTable.nrow(2))
barplot(genderTable)
barplot(genderTable, horiz = TRUE)
table(Gender)
table(SleepCogStudy$Gender)
bigTable <- c(SleepCogStudy$Gender == "Male")
table(bigTable)
bigTable <- c(SleepCogStudy$Gender == c("Male" || "Female")
bigTable <- c(SleepCogStudy$Gender == c("Male" || "Female")
bigTable <- c(SleepCogStudy$Gender == c("Male" || "Female")
bigTable <- c(SleepCogStudy$Gender == c("Male" || "Female")
bigTable <- c(SleepCogStudy$Gender == c("Male" || "Female")
bigTable <- c(SleepCogStudy$Gender == c("Male" || "Female"))
bigTable <- c(SleepCogStudy$Gender == ("Male" || "Female"))
bigTable <- c(SleepCogStudy$Gender == "Male")
table(SleepCogStudy$Gender)
bigTable <- c((SleepCogStudy$Gender == "Male"), (SleepCogStudy$Gender == "Female"))
table(bigTable)
table(SleepCogStudy$SleepCogStudy$NapFrequency)
table(bigTable, SleepCogStudy$NapFrequency)
bigTable <- c((SleepCogStudy$Gender == "Male"), (SleepCogStudy$Gender == "Female"))
barplot(genderTable, col = 2 )
barplot(genderTable, col = 1:4 )
genderTable <- table((SleepCogStudy$Gender[]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male",  "Female"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male" & "Female"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male" && "Female"]), (SleepCogStudy$NapFrequency))
genderTable <- table((SleepCogStudy$Gender["Male" | "Female"]), (SleepCogStudy$NapFrequency))
# Filter maleFx and femaleFx
filtered_data <- subset(SleepCogStudy, Gender %in% c("Male", "Female"))
# Filter maleFx and femaleFx
maleFemale <- subset(SleepCogStudy, Gender %in% c("Male", "Female"))
# Filter maleFx and femaleFx
FilteredStudy <- subset(SleepCogStudy, Gender %in% c("Male", "Female"))
genderTable <- table((FilteredStudy$Gender), (SleepCogStudy$NapFrequency))
# Filter maleFx and femaleFx
FilteredStudy <- subset(SleepCogStudy, Gender %in% c("Male", "Female"))
genderTable <- table((FilteredStudy$Gender), (SleepCogStudy$NapFrequency))
genderTable <- table((FilteredStudy$Gender), (FilteredStudy$NapFrequency))
barplot(genderTable, col = 1:4 )
barplot(genderTable, col = 1:2 )
barplot(genderTable, col = 1:2, beside = TRUE )
genderTable <- table((FilteredStudy$Gender), (FilteredStudy$NapFrequency))
barplot(genderTable, col = 1:2, legend = rownames(genderTable),
main = "Nap Frequency by Gender",
xlab = "Nap Frequency",
ylab = "Count")
barplot(genderTable, col = 1:2, beside = TRUE, legend = rownames(genderTable),
main = "Nap Frequency by Gender",
xlab = "Nap Frequency",
ylab = "Count") )
chisq.test(genderTable)
barplot(genderTable, col = c("red", "blue"), beside = TRUE, legend = rownames(genderTable),
main = "Nap Frequency by Gender",
xlab = "Nap Frequency",
ylab = "Count")
barplot(genderTable, col = c("pink", "skyblue"), beside = TRUE, legend = rownames(genderTable),
main = "Nap Frequency by Gender",
xlab = "Nap Frequency",
ylab = "Count")
# H0: Gender is dependent of nap frequency
# HA: Gender is dependent of nap frequency
chisq.test(genderTable)
# As the p-value is greater than 0, we reject the null hypothesis
```
knitr::opts_chunk$set(echo = TRUE)
SleepCogStudy <- ("Resources/Sleep_Cognition_Study_f1PhaXA")
screenTime <- SleepCogStudy$ScreenTimeBeforeBed
SleepCogStudy
#screenTime <- SleepCogStudy$ScreenTimeBeforeBed
#SleepDuration <- SleepCogStudy$
#workers <- SleepCogStudy$
```
SleepCogStudy
SleepCogStudy <- read.csv("Resources/Sleep_Cognition_Study_f1PhaXA.csv")
SleepCogStudy
screenTime <- SleepCogStudy$ScreenTimeBeforeBed
SleepCogStudy
#SleepDuration <- SleepCogStudy$
workers <- SleepCogStudy$OccupationType["Office Worker"]
table(screenTime)
table(screenTime, SleepDuration)
table(screenTime, sleepDuration)
knitr::opts_chunk$set(echo = TRUE)
SleepCogStudy <- read.csv("Resources/Sleep_Cognition_Study_f1PhaXA.csv")
screenTime <- SleepCogStudy$ScreenTimeBeforeBed
SleepDuration <- SleepCogStudy$AverageSleepDuration
workers <- SleepCogStudy$OccupationType["Office Worker"]
#Filter the data
table(screenTime, SleepDuration)
plot(table(screenTime, SleepDuration))
#Filter the data
office_data <- subset(SleepCogStudy, OccupationType == "Office Worker")
#Filter the data
office_data <- subset(SleepCogStudy, OccupationType == "Office Worker")
AverageSleepDuration ~ ScreenTimeBeforeBed
model <- lm(AverageSleepDuration ~ ScreenTimeBeforeBed, data = office_data)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
SleepCogStudy <- read.csv("Resources/Sleep_Cognition_Study_f1PhaXA.csv")
screenTime <- SleepCogStudy$ScreenTimeBeforeBed
SleepDuration <- SleepCogStudy$AverageSleepDuration
#Filter the data
office_data <- subset(SleepCogStudy, OccupationType == "Office Worker")
AverageSleepDuration ~ ScreenTimeBeforeBed
model <- lm(AverageSleepDuration ~ ScreenTimeBeforeBed, data = office_data)
summary(model)
plot(table(screenTime, SleepDuration))
plot(office_data$ScreenTimeBeforeBed, office_data$AverageSleepDuration,
main = "Sleep Duration vs. Screen Time (Office Workers)",
xlab = "Screen Time Before Bed (hours)",
ylab = "Average Sleep Duration (hours)",
pch = 19, col = "darkgreen")
abline(model, col = "red", lwd = 2)
